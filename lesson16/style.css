.box {
    width: 300px;
    height: 100px;
    background: red;

    /* Переходы (transition) */

    transition-property: width;
    transition-duration: 3s;

    transition-timing-function: cubic-bezier(0,1.16,.45,.27);

    transition-delay: 2s;

    /*
        transition-property - принимает название свойства на которое влияет переход
        По умолчанию - all (все свойства)
        none - отключает все свойства
        имя_свойства - будет работать только для него

        transition-duration - время выполнения перехода
        Задается в s \ ms

        transition-timing-function - принимает функцию, которая отвечает за параметры ускорения перехода
        По умолчанию - ease
        Можно передать любую функцию cubic-besier

        transition-delay - задержка перед выполнением перехода
        Задается в s \ ms


        Краткая запись перехода
        transition: property duration timing function delay;

        Переход сразу для нескольких параметров
        transition: background 1s ease, color 4s linear;

        transition-property: background, color;
        transition-delay: 1s, 4s;
        transition-timing-function: ease, linear;

    */
}

.box:hover {
    width: 500px;
}


/* Трансформации (transform) */

.box2 {
    width: 200px;
    height: 200px;
    background: blue;
}

.box2:hover {
    /* Сдвиг элемента */
    transform: translate(50px, 60px);
    /*
        translateX(50px) - для сдвига по оси X; 
        translateY(60px) - для сдвига по оси Y; 
    */

    /* Искажение */
    transform: skew(20deg, 20deg);
    /* Искажает оси объекта
       skewX()
       skewY()
    */
}

.box3 {
    width: 100px;
    height: 100px;
    background: purple;
}

.box3:hover {
    /* Масштабирование */
    transform: scale(0.5, 0.5);
    /*
        Принимает значения от 0 до 1 - уменьшение относительно 100%
        Больше 1 - это увелечение
        Отрицательное значение, то объект зеркально перевернется

        scaleX(1)
        scaleY(1)
    */
}

.box4 {
    width: 100px;
    height: 100px;
    background: green;
    transition: transform 2s;

    transform-origin: 70% 30%;
    /*
        Меняет координаты оси. Принимает px \ % \ top, left, right, bottom
    */
}

.box4:hover {
    /* Поворот */
    transform: rotate(360deg);
    /* Принимает градусы поворота - deg */
}

.box5 {
    font-size: 60px;
    font-weight: bold;
    animation: trash 2s infinite ease-in-out;
    animation-direction: reverse;
    position: absolute;
}

.box5:hover {
    animation-play-state: paused;
}

@keyframes shadow {
    0% {
        text-shadow: 0 0 3px black;
        left: 0;
        transform: rotate(360deg);
    }

    50% {
        text-shadow: 0 0 15px black;
        left: 300px;
    }

    100% {
        text-shadow: 0 0 3px black;
        left: 0;
    }
}

@keyframes trash {
    0% {
        left: 0;
    }

    37.5% {
        left: 400px;
    }

    62.5% {
        left: 400px;
        top: 0;
        
    }

    87.5% {
        left: 400px;
        top: 200px;
        transform: rotate(360deg);
    }

    100% {
        transform: scale(2,2);
        left: 400px;
        top: 200px;
    }


}

/*
    Задокументированные названия начала и конца анимации
    from - начало (0%)
    to - конец (100%)

    animation-name: произвольное_имя;
    Значение none отключает анимацию.

    animation-duration - время выполнения анимации в s \ ms

    animation-timing-function - принимает функцию cubic-bezier

    animation-iteration-count - количество итераций анимации. (Количество воспроизведений анимации)
    Если задать infinite, то анимация будет бесконечной

    animation-direction - направление анимации
    normal (по умолчанию)
    reverse - все повторы анимации воспроизводятся в обратном направлении
    alternate - каждый нечетный повтор воспроизводится в нормальном направлении,
    а каждый четный в обраном
    alternate-reverse - то же самое что и alternate, только наоборот


    animation-play-state - определяет будет ли анимация остановлена или запущена
    По умолчанию значение running
    paused - остановка анимации

    animation-delay - задержка перед началом анимации в s \ ms


    Краткая запись анимации

    animation: name duration timing-function delay iteration-count direction;


    Множественная анимация

    Анимации можно передавать через запятую и они будут воспроизводится одновременно.

*/